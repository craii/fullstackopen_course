{"ast":null,"code":"var _jsxFileName = \"/Users/eliascheung/Documents/GitHub/fullstackopen_course/part2/exercise/notes/src/App.js\",\n  _s = $RefreshSig$();\nimport Note from './components/Note';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = props => {\n  _s();\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState('a new note...');\n  const [showAll, setShowAll] = useState(true);\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  // const addNote = (event) => {\n  //   event.preventDefault();\n  //   console.log('button clicked', event.target);\n  //   // console.log(notes, {...notes});\n  //   const noteObj = notes.concat({\n  //     content: newNote,\n  //     date: new Date().toISOString(),\n  //     important: Math.random() < 0.5,\n  //     id: notes.length + 1,\n  //   });\n  //   setNewNote(\"\");\n  //   setNotes(noteObj);\n  // }\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    };\n    axios.post('http://localhost:3001/notes', noteObject).then(response => {\n      console.log(response);\n      setNotes(notes.concat(response.data));\n      setNewNote('a new note...');\n    });\n  };\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => {\n        return /*#__PURE__*/_jsxDEV(Note, {\n          note: note\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n\n  //   return (\n  //     <div>\n  //       <h1>Notes</h1>\n  //       <div>\n  //         <button onClick={() => setShowAll(!showAll)}>\n  //           show {showAll ? 'important' : 'all' }\n  //         </button>\n  //       </div>\n  //       <ul>\n  //         {notesToShow.map(note =>\n  //           <Note key={note.id} note={note} />\n  //         )}\n  //       </ul>\n  //       // ...\n  //     </div>\n  //   )\n};\n_s(App, \"SkBLMDuakVzXdp02zZz4MVcqGw4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Note","useState","axios","App","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","notesToShow","filter","note","important","addNote","event","preventDefault","noteObject","content","date","Date","Math","random","id","length","post","then","response","console","log","concat","data","handleNoteChange","target","value","map"],"sources":["/Users/eliascheung/Documents/GitHub/fullstackopen_course/part2/exercise/notes/src/App.js"],"sourcesContent":["import Note from './components/Note'\nimport { useState } from 'react'\nimport axios from 'axios'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState('a new note...');\n  const [showAll, setShowAll] = useState(true);\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  // const addNote = (event) => {\n  //   event.preventDefault();\n  //   console.log('button clicked', event.target);\n  //   // console.log(notes, {...notes});\n  //   const noteObj = notes.concat({\n  //     content: newNote,\n  //     date: new Date().toISOString(),\n  //     important: Math.random() < 0.5,\n  //     id: notes.length + 1,\n  //   });\n  //   setNewNote(\"\");\n  //   setNotes(noteObj);\n  // }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    }\n  \n    axios\n      .post('http://localhost:3001/notes', noteObject)\n      .then(response => {\n        console.log(response)\n        setNotes(notes.concat(response.data))\n        setNewNote('a new note...')\n      })\n  };\n\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <ul>\n        {notes.map((note) => \n              {return <Note key={note.id} note={note}/>})}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange}/>\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n\n//   return (\n//     <div>\n//       <h1>Notes</h1>\n//       <div>\n//         <button onClick={() => setShowAll(!showAll)}>\n//           show {showAll ? 'important' : 'all' }\n//         </button>\n//       </div>\n//       <ul>\n//         {notesToShow.map(note =>\n//           <Note key={note.id} note={note} />\n//         )}\n//       </ul>\n//       // ...\n//     </div>\n//   )\n\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,mBAAmB;AACpC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,GAAG,GAAIC,KAAK,IAAK;EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAACG,KAAK,CAACC,KAAK,CAAC;EAC/C,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,eAAe,CAAC;EACvD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMU,WAAW,GAAGF,OAAO,GAAGJ,KAAK,GAAGA,KAAK,CAACO,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC;;EAE1E;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,OAAO,GAAIC,KAAK,IAAK;IACzBA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,UAAU,GAAG;MACjBC,OAAO,EAAEZ,OAAO;MAChBa,IAAI,EAAE,IAAIC,IAAI,EAAE;MAChBP,SAAS,EAAEQ,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG;MAC9BC,EAAE,EAAEnB,KAAK,CAACoB,MAAM,GAAG;IACrB,CAAC;IAEDvB,KAAK,CACFwB,IAAI,CAAC,6BAA6B,EAAER,UAAU,CAAC,CAC/CS,IAAI,CAACC,QAAQ,IAAI;MAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBtB,QAAQ,CAACD,KAAK,CAAC0B,MAAM,CAACH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACrCxB,UAAU,CAAC,eAAe,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC;EAGD,MAAMyB,gBAAgB,GAAIjB,KAAK,IAAK;IAClCa,OAAO,CAACC,GAAG,CAACd,KAAK,CAACkB,MAAM,CAACC,KAAK,CAAC;IAC/B3B,UAAU,CAACQ,KAAK,CAACkB,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACd;MAAA,UACG9B,KAAK,CAAC+B,GAAG,CAAEvB,IAAI,IACV;QAAC,oBAAO,QAAC,IAAI;UAAe,IAAI,EAAEA;QAAK,GAApBA,IAAI,CAACW,EAAE;UAAA;UAAA;UAAA;QAAA,QAAe;MAAA,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAC9C,eACL;MAAM,QAAQ,EAAET,OAAQ;MAAA,wBACtB;QAAO,KAAK,EAAER,OAAQ;QAAC,QAAQ,EAAE0B;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAE,eACpD;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;;EAGV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAGA,CAAC;AAAA,GA5EK9B,GAAG;AAAA,KAAHA,GAAG;AA8ET,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}