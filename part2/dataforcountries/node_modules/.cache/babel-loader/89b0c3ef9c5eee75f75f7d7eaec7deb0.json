{"ast":null,"code":"var _jsxFileName = \"/Users/eliascheung/Documents/GitHub/fullstackopen_course/part2/dataforcountries/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Filter from './components/Filter';\nimport Results from './components/Results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const apiUrl = 'https://restcountries.com/v3.1/all';\n  const [countries, setContries] = useState([]);\n  const [filterCountries, setFilter] = useState([]);\n  const api_key = process.env.REACT_APP_API_KEY;\n  const weatherApiUrl = 'http://api.openweathermap.org/data/2.5/weather?q=London&ApiKey=' + api_key;\n  console.log(weatherApiUrl);\n  const initCountriesHook = () => {\n    axios.get(apiUrl).then(response => {\n      const res = response.data;\n      setContries(res);\n      console.log('Promise fullfilled. Countries info received...');\n    });\n  };\n  useEffect(initCountriesHook, []);\n  // console.log(countries);\n\n  const onFilterChange = event => {\n    const changingText = event.target.value;\n    console.log(changingText);\n    const filtered = countries.filter(country => country.name.common.toUpperCase().indexOf(changingText.toUpperCase()) >= 0);\n    console.log('搜索结果', filtered);\n    setFilter(filtered);\n  };\n  const showDetailHandler = index => {\n    const newFilter = [filterCountries[index]];\n    setFilter(newFilter);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Filter, {\n      onChange: onFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      result: filterCountries,\n      showdetail: showDetailHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"XylgWDIv5S/NpxsOjpWs+X1QcBQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Filter","Results","App","apiUrl","countries","setContries","filterCountries","setFilter","api_key","process","env","REACT_APP_API_KEY","weatherApiUrl","console","log","initCountriesHook","get","then","response","res","data","onFilterChange","event","changingText","target","value","filtered","filter","country","name","common","toUpperCase","indexOf","showDetailHandler","index","newFilter"],"sources":["/Users/eliascheung/Documents/GitHub/fullstackopen_course/part2/dataforcountries/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Filter from './components/Filter'\nimport Results from './components/Results'\n\n\nconst App = () => {\n  const apiUrl = 'https://restcountries.com/v3.1/all';\n  const [countries, setContries] = useState([]);\n  const [filterCountries, setFilter] = useState([]);\n  const api_key = process.env.REACT_APP_API_KEY;\n  const weatherApiUrl = 'http://api.openweathermap.org/data/2.5/weather?q=London&ApiKey=' + api_key;\n  console.log(weatherApiUrl);\n\n\n  const initCountriesHook = () =>{\n    axios.get(apiUrl).then(\n      (response) =>{\n        const res = response.data;\n        setContries(res);\n        console.log('Promise fullfilled. Countries info received...');\n      }\n    );\n  };\n\n  useEffect(initCountriesHook,[]);\n  // console.log(countries);\n\n\n  const onFilterChange = (event) =>{\n    const changingText = event.target.value;\n    console.log(changingText);\n    const filtered = countries.filter(country => country.name.common.toUpperCase().indexOf(changingText.toUpperCase()) >= 0);\n    console.log('搜索结果', filtered);\n    setFilter(filtered);\n  };\n\n  const showDetailHandler = (index) =>{\n    const newFilter = [filterCountries[index]];\n    setFilter(newFilter);\n  };\n\n  return (\n    <div >\n      <Filter onChange={onFilterChange} />\n      <Results result={filterCountries} showdetail={showDetailHandler} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAAA;AAG1C,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAMC,MAAM,GAAG,oCAAoC;EACnD,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACS,eAAe,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAMW,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAC7C,MAAMC,aAAa,GAAG,iEAAiE,GAAGJ,OAAO;EACjGK,OAAO,CAACC,GAAG,CAACF,aAAa,CAAC;EAG1B,MAAMG,iBAAiB,GAAG,MAAK;IAC7BhB,KAAK,CAACiB,GAAG,CAACb,MAAM,CAAC,CAACc,IAAI,CACnBC,QAAQ,IAAI;MACX,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;MACzBf,WAAW,CAACc,GAAG,CAAC;MAChBN,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;IAC/D,CAAC,CACF;EACH,CAAC;EAEDhB,SAAS,CAACiB,iBAAiB,EAAC,EAAE,CAAC;EAC/B;;EAGA,MAAMM,cAAc,GAAIC,KAAK,IAAI;IAC/B,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACvCZ,OAAO,CAACC,GAAG,CAACS,YAAY,CAAC;IACzB,MAAMG,QAAQ,GAAGtB,SAAS,CAACuB,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAACC,MAAM,CAACC,WAAW,EAAE,CAACC,OAAO,CAACT,YAAY,CAACQ,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC;IACxHlB,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEY,QAAQ,CAAC;IAC7BnB,SAAS,CAACmB,QAAQ,CAAC;EACrB,CAAC;EAED,MAAMO,iBAAiB,GAAIC,KAAK,IAAI;IAClC,MAAMC,SAAS,GAAG,CAAC7B,eAAe,CAAC4B,KAAK,CAAC,CAAC;IAC1C3B,SAAS,CAAC4B,SAAS,CAAC;EACtB,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,QAAQ,EAAEd;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,eACpC,QAAC,OAAO;MAAC,MAAM,EAAEf,eAAgB;MAAC,UAAU,EAAE2B;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/D;AAEV,CAAC;AAAC,GA1CI/B,GAAG;AAAA,KAAHA,GAAG;AA4CT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}